<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
    					http://www.springframework.org/schema/aop/spring-aop.xsd
    					http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="myRealm" />
            </list>
        </property>
    </bean>

    <bean id="myRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager" />
        <!--
            会直接去找http://localhost:8080/topview/unauthorized.html,跟前端约定由前端来做判断跳转
            <property name="unauthorizedUrl" value="/unauthorized.html"/>
         -->
        <property name="filters">
            <map>
                <entry key="demoFilter" value-ref="demoFilter" />
                <!-- 强制跳转到https请求的filter，需要的话在下面的filterChainDefinitions的相应拦截url后面配置上即可 -->
                <entry key="ssl" value-ref="sslFilter"/>
            </map>
        </property>
        <!-- [urls] -->
        <property name="filterChainDefinitions">
            <value>
                <!-- url = 拦截器[参数] -->
                <!-- anon 匿名访问，不需要登陆即可访问 -->
                <!-- authc标明需要验证后才能访问 -->
                <!-- roles[admin] 需要角色为admin才能访问 -->
                <!-- perms["admin:*"] 需要有admin:*权限才能访问 -->
                /captcha/**=demoFilter
                <!--/pages/admin/**=loginFilter,rolesFilter[admin],perms["admin:*"]
                /authority/userAction/**=roles[admin]-->
                /**=anon
            </value>
        </property>
    </bean>

    <!-- filter -->
    <bean id="demoFilter" class="com.gblau.webx.web.module.pipeline.shiro.filter.DemoFilter"/>
    <bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter"/>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>